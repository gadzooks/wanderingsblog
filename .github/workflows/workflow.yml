name: Build and deploy jekyll site

on:
  issue_comment:
  issues:
    types: [deleted, edited, opened]
  push:
    branches:
      - master
      # - source
      # It is highly recommended that you only run this action on push to a
      # specific branch, eg. master or source (if on *.github.io repo)

jobs:
  my-job:
    runs-on: ubuntu-latest
    steps:
      - name: my-step
        run: echo "Hello World!"
      - uses: jmatsu/detect-issue-comment-to-pr-action@1.0
        id: filter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "I'm a pull request (${{ steps.filter.outputs.pull_number }})"
        if: steps.filter.outputs.is_pull_request == 'true'
      - run: echo "I'm not a pull request"
        if: steps.filter.outputs.is_pull_request != 'true'
  # jekyll:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: üìÇ setup
  #       uses: actions/checkout@v2

  #     - name: Use Node.js
  #       uses: actions/setup-node@v1
  #       with: { node-version: '12.x' }

  #     - name: Set up dependencies
  #       run: npm install

  #     - name: Generate javascript
  #       run: npm run build:scripts:prod

  #       # include the lines below if you are using jekyll-last-modified-at
  #       # or if you would otherwise need to fetch the full commit history
  #       # however this may be very slow for large repositories!
  #       # with:
  #       # fetch-depth: '0'
  #     - name: üíé setup ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         bundler-cache: true # runs 'bundle install' and caches installed gems automatically

  #     - name:  üí™üèª generate posts based on flickr metadata
  #       run: |
  #         ./scripts/run-flickr-poll
  #       env:
  #         FLICKR_API_KEY: ${{ secrets.FLICKR_API_KEY }}
  #         FLICKR_API_SECRET: ${{ secrets.FLICKR_API_SECRET }}
  #         FLICKR_SHARED_SECRET: ${{ secrets.FLICKR_SHARED_SECRET }}

  #     - name: üî® install dependencies & build site
  #       uses: limjh16/jekyll-action-ts@v2
  #       env:
  #         FLICKR_API_KEY: ${{ secrets.FLICKR_API_KEY }}
  #         FLICKR_API_SECRET: ${{ secrets.FLICKR_API_SECRET }}
  #         FLICKR_SHARED_SECRET: ${{ secrets.FLICKR_SHARED_SECRET }}
  #       with:
  #         enable_cache: true
  #         ### Enables caching. Similar to https://github.com/actions/cache.
  #         #
  #         # format_output: true
  #         ### Uses prettier https://prettier.io to format jekyll output HTML.
  #         #
  #         # prettier_opts: '{ "useTabs": true }'
  #         ### Sets prettier options (in JSON) to format output HTML. For example, output tabs over spaces.
  #         ### Possible options are outlined in https://prettier.io/docs/en/options.html
  #         #
  #         # prettier_ignore: 'about/*'
  #         ### Ignore paths for prettier to not format those html files.
  #         ### Useful if the file is exceptionally large, so formatting it takes a while.
  #         ### Also useful if HTML compression is enabled for that file / formatting messes it up.
  #         #
  #         # jekyll_src: sample_site
  #         ### If the jekyll website source is not in root, specify the directory. (in this case, sample_site)
  #         ### By default, this is not required as the action searches for a _config.yml automatically.
  #         #
  #         # gem_src: sample_site
  #         ### By default, this is not required as the action searches for a _config.yml automatically.
  #         ### However, if there are multiple Gemfiles, the action may not be able to determine which to use.
  #         ### In that case, specify the directory. (in this case, sample_site)
  #         ###
  #         ### If jekyll_src is set, the action would automatically choose the Gemfile in jekyll_src.
  #         ### In that case this input may not be needed as well.
  #         #
  #         # key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
  #         # restore-keys: ${{ runner.os }}-gems-
  #         ### In cases where you want to specify the cache key, enable the above 2 inputs
  #         ### Follows the format here https://github.com/actions/cache
  #         #
  #         # custom_opts: '--drafts --future'
  #         ### If you need to specify any Jekyll build options, enable the above input
  #         ### Flags accepted can be found here https://jekyllrb.com/docs/configuration/options/#build-command-options

  #     - name: check html generated via html-proofer
  #       run: |
  #         ./scripts/cibuid 
  #     - name: üöÄ deploy
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         publish_dir: ./_site
  #         # if the repo you are deploying to is <username>.github.io, uncomment the line below.
  #         # if you are including the line below, make sure your source files are NOT in the master branch:
  #         # publish_branch: master